<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fruitsalesplatform.mapper.UserMapper">
    <!-- resultMap 映射 -->
    <resultMap id="userRM" type="com.fruitsalesplatform.entity.User">
        <!-- 主键 -->
        <id property="userId" column="userid" jdbcType="VARCHAR"/>
        <!-- 一般属性 -->
        <result property="userName" column="username"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="telephone" column="telephone"/>
    </resultMap>
    <!-- 查询一个数据 -->
    <select id="get" parameterType="String" resultMap="userRM">
        SELECT * FROM user WHERE userid=#{userid}
    </select>
    <!-- 查询 -->
    <select id="find" parameterType="java.util.HashMap" resultMap="userRM">
        SELECT * FROM user WHERE 1=1
        <if test="username != null"> and username=#{username}</if>
        <if test="password != null">and password=#{password}</if>
        <if test="name != null">and name=#{name}</if>
        <if test="telephone != null">and telephone=#{telephone}</if>
    </select>
    <insert id="insert" parameterType="com.fruitsalesplatform.entity.User">
        INSERT INTO user (userid, username, password, name, telephone) VALUES (
          #{userId, jdbcType=VARCHAR},
          #{userName, jdbcType=VARCHAR},
          #{password, jdbcType=VARCHAR},
          #{name, jdbcType=VARCHAR},
          #{telephone, jdbcType=VARCHAR}
        )
    </insert>
    <!-- 修改语句 -->
    <update id="update" parameterType="com.fruitsalesplatform.entity.User">
        UPDATE user
        <set>
            <if test="password != null">PASSWORD=#{password, jdbcType=VARCHAR},</if>
            <if test="name != null">NAME=#{name, jdbcType=VARCHAR},</if>
            <if test="telephone != null">TELEPHONE=#{telephone, jdbcType=VARCHAR}</if>
        </set>
        WHERE USERID = #{userId}
    </update>
    <!-- 删除一条 -->
    <delete id="deleteById" parameterType="String">
        DELETE FROM user WHERE USERID = #{userId}
    </delete>
    <!-- 删除多条（一维字符串数组的形式） -->
    <delete id="delete" parameterType="String">
     DELETE FROM user WHERE USERID IN
     <foreach collection="array" item="userId" open="(" close=")" separator=",">
        #{userId}
     </foreach>
    </delete>
</mapper>